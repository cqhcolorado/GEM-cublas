SRCS =	gem_com.F90 gem_equil.F90 gem_main.F90 gem_outd.F90 gem_fcnt.F90 gem_fft_wrapper.F90 gem_gkps_adi.F90 coupling_core_edge.F90 mapping.F90 out3d.F90 adios2_comm_mod.F90 pushe.F90

#OBJS =	gem_com.o gem_equil.o gem_main.o gem_outd.o gem_fcnt.o gem_fft_wrapper.o gem_gkps_adi.o coupling_core_edge.o mapping.o out3d.o adios2_comm_mod.o pushe.o
OBJS =	gem_com.o gem_equil.o gem_main.o gem_outd.o gem_fcnt.o gem_fft_wrapper.o gem_gkps_adi.o coupling_core_edge.o mapping.o adios2_comm_mod.o pushe.o

#DFFTPACK=/gpfs/alpine/world-shared/fus123/jycheng/software/dfftpack/libdfftpack.a
DFFTPACK=/ccs/home/cmakrides/ECP_HACKATHON/GEM-cublas/dfftpack/libdfftpack.a
LIBS = $(DFFTPACK)
PLIB = gem_pputil.o

#COUPLING_OPT := -DCOUPLING -DKINETIC_ELECTRON -DRK4
#DEBUG_MAP_OPT := -DDEBUG_MAPPING
MAP_OPT := -DMAP_PARALLEL -DGYRO_TEST -DDIRECT_F
#XGC_3D_OUTPUT_OPT := -DXGC_3D_OUTPUT
#EQUIL_OUTPUT_OPT := -DEQUIL_OUTPUT
ADIOS2_OPT := -DADIOS2
#OPENMP_OPT := -DOPENMP
OPENMP_OL_OPT := -DOPENMP_OL
#OPENACC_OPT := -DOPENACC
F90 = ftn
# if you want loop-marks that show what the compielr is doing, add -hlist=a as an option
OPT = -homp -O0
#F90 += $(COUPLING_OPT) $(XGC_3D_OUTPUT_OPT) $(EQUIL_OUTPUT_OPT) $(DEBUG_MAP_OPT) $(MAP_OPT) $(ADIOS2_OPT) $(OPENMP_OPT)
OPT += $(COUPLING_OPT) $(XGC_3D_OUTPUT_OPT) $(EQUIL_OUTPUT_OPT) $(DEBUG_MAP_OPT) $(MAP_OPT) $(ADIOS2_OPT) $(OPENMP_OL_OPT)

ADIOS2_DIR ?=/ccs/home/cmakrides/ECP_HACKATHON/adios2_install
ADIOS2_INC=$(shell $(ADIOS2_DIR)/bin/adios2-config --fortran-flags)
ADIOS2_LIB=$(shell $(ADIOS2_DIR)/bin/adios2-config --fortran-libs --cxx-libs)

PSPLINE_DIR ?=/ccs/home/cmakrides/ECP_HACKATHON/GEM-cublas/pspline-gpu
PSPLINE_INC=-I$(PSPLINE_DIR)
PSPLINE_LIB=-L$(PSPLINE_DIR)

LIBS+= $(PSPLINE_DIR)/libpspline.a

LIB := $(ADIOS_INC) $(PSPLINE_INC) $(ADIOS2_INC)
LD_LIB := $(ADIOS_LIB) $(PSPLINE_LIB) $(ADIOS2_LIB)

#LDFLAGS = -homp # if linking iwth ftn, the current CCE version is a bit old and uses the system linker 
LC = CC
LDFLAGS = -fopenmp
LDFLAGS_POST = -Wl,--as-needed,-lmpifort_cray,--no-as-needed

#all : gem

#gem_main: gem_equil.o gem_main.o gem_outd.o gem_fcnt.o gem_pputil.o gem_com.o gem_fft_wrapper.o gem_gkps_adi.o coupling_core_edge.o mapping.o out3d.o adios2_comm_mod.o pushe.o
gem_main: gem_equil.o gem_main.o gem_outd.o gem_fcnt.o gem_pputil.o gem_com.o gem_fft_wrapper.o gem_gkps_adi.o coupling_core_edge.o mapping.o adios2_comm_mod.o pushe.o
	$(LC) $(LDFLAGS) -o gem_main $(OBJS) $(PLIB) $(LIBS) $(LD_LIB) $(LDFLAGS_POST)

gem_pputil.o: gem_pputil.F90
	$(F90) -c $(OPT) gem_pputil.F90

gem_com.o: gem_com.F90 gem_pputil.o
	$(F90) -c $(OPT) gem_com.F90

gem_equil.o: gem_equil.F90 gem_pputil.o
	$(F90) -c $(OPT) gem_equil.F90

pushe.o: pushe.F90 gem_com.o gem_equil.o
	$(F90) -c $(OPT) pushe.F90

adios2_comm_mod.o : adios2_comm_mod.F90 gem_com.o
	$(F90) -c $(OPT) $(LIB) $(LD_LIB) adios2_comm_mod.F90

coupling_core_edge.o : coupling_core_edge.F90 gem_com.o adios2_comm_mod.o
	$(F90) -c $(OPT)  $(LIB) $(LD_LIB) coupling_core_edge.F90

mapping.o : mapping.F90 gem_com.o gem_equil.o coupling_core_edge.o adios2_comm_mod.o
	$(F90) -c $(OPT)  $(LIB) $(LD_LIB) mapping.F90

gem_gkps_adi.o: gem_gkps_adi.F90 gem_com.o gem_equil.o gem_pputil.o
	$(F90) -c $(OPT) gem_gkps_adi.F90

out3d.o: out3d.F90 gem_com.F90 gem_com.o gem_equil.o coupling_core_edge.o mapping.o
	$(F90) -c $(OPT) $(LIB) $(LD_LIB) out3d.F90

#gem_main.o: gem_main.F90 gem_fft_wrapper.o gem_pputil.o gem_com.o gem_equil.o gem_gkps_adi.o coupling_core_edge.o mapping.o out3d.o pushe.o
gem_main.o: gem_main.F90 gem_fft_wrapper.o gem_pputil.o gem_com.o gem_equil.o gem_gkps_adi.o coupling_core_edge.o mapping.o  pushe.o
	$(F90) -c $(OPT) $(LIB) $(LD_LIB) gem_main.F90

gem_outd.o: gem_outd.F90 gem_fft_wrapper.o gem_pputil.o gem_com.o gem_equil.o
	$(F90) -c $(OPT) gem_outd.F90

gem_fcnt.o: gem_fcnt.F90
	$(F90) -c $(OPT) gem_fcnt.F90

gem_fft_wrapper.o: gem_fft_wrapper.F90
	$(F90) -c $(OPT) gem_fft_wrapper.F90

clean:
	rm -f *.o *.lst *.mod gem_main
